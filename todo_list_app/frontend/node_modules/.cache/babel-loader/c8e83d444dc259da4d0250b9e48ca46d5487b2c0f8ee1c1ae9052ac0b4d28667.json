{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jihad\\\\Documents\\\\Todo_List_App\\\\todo_list_app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AppBar, Toolbar, Typography, Container, TextField, Button, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Checkbox, Grid, Box } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Déclaration des états locaux pour stocker la liste des tâches et le titre d'une nouvelle tâche\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  useEffect(() => {\n    // Utilisation de useEffect pour charger la liste des tâches depuis le backend\n    axios.get('http://localhost:3001/tasks').then(response => {\n      setTasks(response.data);\n    });\n  }, []);\n  const handleAddTask = () => {\n    // Envoyer une nouvelle tâche au backend\n    axios.post('http://localhost:3001/tasks', {\n      title: newTaskTitle\n    }).then(response => {\n      setTasks([...tasks, response.data]);\n      setNewTaskTitle('');\n    });\n  };\n  const handleToggleComplete = taskId => {\n    // Mettre à jour l'état de la tâche au backend (complétée ou non)\n    const updatedTasks = tasks.map(task => {\n      if (task.id === taskId) {\n        task.completed = !task.completed;\n        axios.put(`http://localhost:3001/tasks/${taskId}`, {\n          completed: task.completed\n        });\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = taskId => {\n    // Supprimer une tâche du backend\n    axios.delete(`http://localhost:3001/tasks/${taskId}`).then(() => {\n      const updatedTasks = tasks.filter(task => task.id !== taskId);\n      setTasks(updatedTasks);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          type: \"text\",\n          label: \"Nouvelle t\\xE2che\",\n          value: newTaskTitle,\n          onChange: e => setNewTaskTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddTask,\n          children: \"Ajouter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: task.completed,\n            onChange: () => handleToggleComplete(task.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.title,\n            style: {\n              textDecoration: task.completed ? 'line-through' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              onClick: () => handleDeleteTask(task.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JCbPMeVttXnDmQPUo6I6n9O3ejA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","AppBar","Toolbar","Typography","Container","TextField","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Checkbox","Grid","Box","DeleteIcon","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTaskTitle","setNewTaskTitle","get","then","response","data","handleAddTask","post","title","handleToggleComplete","taskId","updatedTasks","map","task","id","completed","put","handleDeleteTask","delete","filter","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","mt","fullWidth","type","label","value","onChange","e","target","color","onClick","checked","primary","style","textDecoration","edge","_c","$RefreshReg$"],"sources":["C:/Users/jihad/Documents/Todo_List_App/todo_list_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Container,\n  TextField,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Checkbox,\n  Grid,\n  Box,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nfunction App() {\n  // Déclaration des états locaux pour stocker la liste des tâches et le titre d'une nouvelle tâche\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  useEffect(() => {\n    // Utilisation de useEffect pour charger la liste des tâches depuis le backend\n    axios.get('http://localhost:3001/tasks').then((response) => {\n      setTasks(response.data);\n    });\n  }, []);\n\n  const handleAddTask = () => {\n    // Envoyer une nouvelle tâche au backend\n    axios.post('http://localhost:3001/tasks', { title: newTaskTitle }).then((response) => {\n      setTasks([...tasks, response.data]);\n      setNewTaskTitle('');\n    });\n  };\n\n  const handleToggleComplete = (taskId) => {\n    // Mettre à jour l'état de la tâche au backend (complétée ou non)\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === taskId) {\n        task.completed = !task.completed;\n        axios.put(`http://localhost:3001/tasks/${taskId}`, { completed: task.completed });\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleDeleteTask = (taskId) => {\n    // Supprimer une tâche du backend\n    axios.delete(`http://localhost:3001/tasks/${taskId}`).then(() => {\n      const updatedTasks = tasks.filter((task) => task.id !== taskId);\n      setTasks(updatedTasks);\n    });\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Todo List</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <Box mt={2}>\n          <TextField\n            variant=\"outlined\"\n            fullWidth\n            type=\"text\"\n            label=\"Nouvelle tâche\"\n            value={newTaskTitle}\n            onChange={(e) => setNewTaskTitle(e.target.value)}\n          />\n        </Box>\n        <Box mt={2}>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleAddTask}>\n            Ajouter\n          </Button>\n        </Box>\n        <List>\n          {tasks.map((task) => (\n            <ListItem key={task.id}>\n              <Checkbox\n                checked={task.completed}\n                onChange={() => handleToggleComplete(task.id)}\n              />\n              <ListItemText\n                primary={task.title}\n                style={{ textDecoration: task.completed ? 'line-through' : 'none' }}\n              />\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteTask(task.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}